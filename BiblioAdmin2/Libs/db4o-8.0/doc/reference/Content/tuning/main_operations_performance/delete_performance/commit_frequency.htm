<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Tuning|Main Operations Performance|Delete Performance" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Commit Frequency	</title>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').html();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
	prettyPrint();	
};
                /* ]]> */</script>
        <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../../Resources/Code/prettify.js">
        </script>
        <script src="../../../Resources/Code/lang-vb.js">
        </script>
        <script src="../../../Resources/Code/jquery.min.js">
        </script>
        <script src="../../../Resources/Code/ZeroClipboard.js">
        </script>
        <script src="../../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../index_CSH.html#tuning/main_operations_performance/delete_performance/commit_frequency.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../../tuning.htm">Tuning</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../main_operations_performance.htm">Main Operations Performance</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../delete_performance.htm">Delete Performance</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Commit Frequency</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Commit Frequency</h1>
        <p>Commit time has a major influence on all db4o operations.
Commit is generally a slow operation as it requires physical disk access. The
following example shows how the frequency of commits affects the delete
performance:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">DeletePerformanceBenchmark.java: runCommitTest
private void runCommitTest() {
      System.out.println("Delete test with different commit frequency");
      
      configureForCommitTest();
      initForCommitTest();
      
      clean();
      System.out.println("Test delete all:");
      open();
      store();
      deleteAll();
      close();
      
      
      
      clean();
      System.out.println("Test delete all with commit after each " 
+ _commitInterval + " objects:");
      open();
      store();
      deleteAllWithCommit();
      close();
      
      
    }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p>The following initial setup is used:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">DeletePerformanceBenchmark.java: initForCommitTest
private void initForCommitTest() {
      _count = 10000;
      _commitInterval = 1000;
        _depth = 3;
        _isClientServer = false;
    }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p>Delete procedures are as follows:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">DeletePerformanceBenchmark.java: deleteAll
private void deleteAll()  {
    ObjectSet result = objectContainer.queryByExample(null);
      ArrayList&lt;Long&gt; ids = new ArrayList&lt;Long&gt;();
      for (Object obj: result) {
        ids.add(objectContainer.ext().getID(obj));
      }
      startTimer();
      for (long id: ids) {
        objectContainer.delete(objectContainer.ext().getByID(id));
      }
      objectContainer.commit();
      stopTimer("Deleted all objects");
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">DeletePerformanceBenchmark.java: deleteAllWithCommit
private void deleteAllWithCommit()  {
      ObjectSet result = objectContainer.queryByExample(null);
      ArrayList&lt;Long&gt; ids = new ArrayList&lt;Long&gt;();
      for (Object obj: result) {
        ids.add(objectContainer.ext().getID(obj));
      }
      startTimer();
      int i = 0;
      for (long id: ids) {
        objectContainer.delete(objectContainer.ext().getByID(id));
        if (i++ &gt; _commitInterval) {
          objectContainer.commit();
          i = 0;
        }
      }
      objectContainer.commit();
      stopTimer("Deleted all objects");
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p>Item class used in this example has depth = 3:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">DeletePerformanceBenchmark.java: Item
public static class Item  {
        
        public String _name;
        public Item _child;

        public Item() {
            
        }
        
        public Item(String name, Item child) {
            _name = name;
            _child = child;
        }
    }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p>The results on the test computer are:</p>
        <p><i>Delete test with
different commit frequency</i>
        </p>
        <p><i>Test delete all:</i>
        </p>
        <p><i>Store 30000
objects: 2432ms</i>
        </p>
        <p><i>Deleted all
objects: 3731ms</i>
        </p>
        <p><i>Test delete all
with commit after each 1000 objects:</i>
        </p>
        <p><i>Store 30000
objects: 2103ms</i>
        </p>
        <p><i>Deleted all objects: 8615ms</i>
        </p>
        <p>You can see that the time required
for deletion increased with the amount of commits. To improve the performance
commit frequency should be kept relatively low, 
in the same time it must ensure the integrity of the logical
transactions.   </p>
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="../performancejava.zip">Java </a>
            </MadCap:conditionalText>
        </p>
        <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>