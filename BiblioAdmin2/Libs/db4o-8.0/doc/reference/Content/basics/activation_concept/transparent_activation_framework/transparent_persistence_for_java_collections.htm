<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Basics Operations &amp; Concepts|Activation|Transparent Activation|TA Enhanced Example" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Transparent Persistence For Java Collections	</title>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').html();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
	prettyPrint();	
};
                /* ]]> */</script>
        <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../../SkinSupport/MadCapAll.js">
        </script>
        <script src="../../../Resources/Code/prettify.js">
        </script>
        <script src="../../../Resources/Code/lang-vb.js">
        </script>
        <script src="../../../Resources/Code/jquery.min.js">
        </script>
        <script src="../../../Resources/Code/ZeroClipboard.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../index_CSH.html#basics/activation_concept/transparent_activation_framework/transparent_persistence_for_java_collections.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../../basics.htm">Basics Operations &amp; Concepts</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../activation.htm">Activation</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../transparent_activation_framework.htm">Transparent Activation</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Transparent Persistence For Java Collections</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Transparent Persistence For Java Collections</h1>
        <p>One of the
most valuable usages of <span class="MCTextPopup"><a href="javascript:void(0);" class="MCTextPopupSpot" onclick="FMCTextPopup( event, this ); return false;">TA<img style="border: none;margin-left: 5px;" src="../../../SkinSupport/ExpandingClosed.gif" MadCap:altsrc="../../../SkinSupport/ExpandingOpen.gif" class="MCExpandingIcon" onload="if ( typeof( FMCPreloadImage ) == 'function' ) { FMCPreloadImage( '../../../SkinSupport/ExpandingOpen.gif' ); }" /></a><span class="MCTextPopupBody" style="display: none; ">Transparent Activation</span></span>/<span class="MCTextPopup"><a href="javascript:void(0);" class="MCTextPopupSpot" onclick="FMCTextPopup( event, this ); return false;">TP<img style="border: none;margin-left: 5px;" src="../../../SkinSupport/ExpandingClosed.gif" MadCap:altsrc="../../../SkinSupport/ExpandingOpen.gif" class="MCExpandingIcon" onload="if ( typeof( FMCPreloadImage ) == 'function' ) { FMCPreloadImage( '../../../SkinSupport/ExpandingOpen.gif' ); }" /></a><span class="MCTextPopupBody" style="display: none; ">Transparent Persistence</span></span> is in collections:</p>
        <ul>
            <li value="1">Using
TA you don't have to worry about activating the next level of objects</li>
            <li value="2">Using
TP you can add new members to the collection or update existing ones without
worrying about storing the changes to the object container.</li>
        </ul>
        <p>If you remember the TA basics, in order to make
an object activatable its class must implement Activatable interface. This can
be done easily with the new classes, however in collections case you will
probably want to use standard Java collection, which can't be modified. Db4o
solves this problem by deriving special activatable classes from the standard
Java collections and overriding all the public methods adding activate() call before
calling the base method. At present db4o supports all Java5 standard
collections:</p>
        <p><i>ActivatableArrayList 
ActivatableHashMap 
ActivatableHashSet 
ActivatableHashtable 
ActivatableLinkedList 
ActivatableStack 
ActivatableTreeSet</i>
        </p>
        <p>In order to make use of these
classes you will only need to add TransparentPersistenceSupport to your
configuration before opening the object container:</p>
        <pre class="prettyprint" xml:space="preserve">TACollectionsExample.java: openObjectContainer
private static ObjectContainer openObjectContainer()  {
    EmbeddedConfiguration embeddedConfiguration = Db4oEmbedded
        .newConfiguration();
    embeddedConfiguration.common().add(new TransparentPersistenceSupport());
    return Db4oEmbedded.openFile(embeddedConfiguration, DB4O_FILE_NAME);
  }</pre>
        <p>And in the end enhance the project adding TP
support (example will be shown below).</p>
        <p>In your code you will simply use Java
collections as usual, i.e.:</p>
        <pre class="prettyprint" xml:space="preserve">Pilot.java
package do4odoc.tacollections;

public class Pilot  {
  
  private String name;
  
  public Pilot(String name) {
    this.name = name;
  }
  
  @Override
  public String toString()  {
    return name;
  }
  
}</pre>
        <pre class="prettyprint" xml:space="preserve">Team.java
package do4odoc.tacollections;

import java.util.*;

public class Team  {
  
  private String name;
  
  private List&lt;Pilot&gt; pilots;
  
  public Team(String name) {
    this.name = name;
  }
  
  public void addPilot(Pilot pilot) {
    if(pilots == null) {
      pilots = new ArrayList&lt;Pilot&gt;();
    }
    pilots.add(pilot);
  }
  
  @Override
  public String toString()  {
    StringBuilder str = new StringBuilder();
    str.append(String.format("Team %s", name));
    if(pilots != null) {
      str.append(" with pilots: \n");
      for (Pilot p : pilots) {
        str.append(String.format("    %s \n", p));
      }
    }
    return str.toString();
  }
  
  public String getName() {
    return name;
  }

}</pre>
        <p>The following example code shows how Team class
can be used:</p>
        <pre class="prettyprint" xml:space="preserve">TACollectionsExample.java: main
public static void main(String[] args)  {
    new File(TACollectionsExample.DB4O_FILE_NAME).delete();
    ObjectContainer objectContainer = openObjectContainer();
    Team team = new Team("Ferrari");
    // Store the team first time to make it persistent
    objectContainer.store(team);
    objectContainer.close();
    
    objectContainer = openObjectContainer();
    Team team1 = queryTeamByName(objectContainer, "Ferrari");
    team1.addPilot(new Pilot("Felipe Massa"));
    team1.addPilot(new Pilot("Kimi Raikkonen"));
    // No need to re-store team - it will be stored automatically
    objectContainer.close();
    
    
    objectContainer = openObjectContainer();
    // check the results
    ObjectSet&lt;Team&gt; objectSet = objectContainer.query(Team.class);
    while (objectSet.hasNext())  {
      System.out.println(objectSet.next());
    }
    objectContainer.close();
  }</pre>
        <p>Conversion to Activatable db4o collections and
TA enhancement will be done by an ant script using Db4oEnhancerAntTask.
This task can be integrated in compile and run script as follows:</p>
        <pre class="prettyprint" xml:space="preserve">build.xml
&lt;project name="db4o.TP.sample" basedir="." default="run"&gt;

  &lt;property name="dir.src" value="${basedir}/src" /&gt;
  &lt;property name="dir.bin" value="${basedir}/bin" /&gt;
  
  &lt;path id="project.classpath"&gt;
      &lt;fileset dir="lib"&gt;
        &lt;include name="**/*.jar"/&gt;
      &lt;/fileset&gt;
  &lt;/path&gt;
  
  &lt;taskdef name="db4o-enhance" 
    classname="com.db4o.enhance.Db4oEnhancerAntTask" 
    classpathref="project.classpath" /&gt;
  
  &lt;target name="compile"&gt;
    &lt;mkdir dir="${dir.bin}" /&gt;
    &lt;javac srcdir="${dir.src}" destdir="${dir.bin}" failonerror="true"&gt;
      &lt;classpath refid="project.classpath" /&gt;
    &lt;/javac&gt;
  &lt;/target&gt;
  
  &lt;target name="enhance" depends="compile"&gt;
    &lt;db4o-enhance classtargetdir="${dir.bin}" ta="true" 
nq="true" collections="true"&gt;
      &lt;classpath refid="project.classpath" /&gt;
      &lt;sources dir="${dir.bin}"&gt;
        &lt;include name="**/*.class" /&gt;
      &lt;/sources&gt;
    &lt;/db4o-enhance&gt;
  &lt;/target&gt;

  &lt;target name="run" depends="enhance"&gt;
    &lt;java classname="do4odoc.tacollections.TACollectionsExample" 
failonerror="true"&gt;
      &lt;classpath&gt;
        &lt;pathelement path="${dir.bin}" /&gt;
        &lt;path refid="project.classpath" /&gt;
      &lt;/classpath&gt;
    &lt;/java&gt;
  &lt;/target&gt;

&lt;/project&gt;</pre>
        <p>If you will run this script you will see that
the new team members were saved automatically when the object container was
closed. To see the effect of the enhancer, please try to run
TACollectionExample from IDE (without enhancement), in this case standard Java
collections will be used and TA/TP will have no effect.</p>
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="tacollectionsjava.zip">Java </a>
            </MadCap:conditionalText>
        </p>
        <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>