<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Basics Operations &amp; Concepts|Activation|Transparent Activation|TA Enhanced Example" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>TA Enhancement At Loading Time	</title>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').html();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
	prettyPrint();	
};
                /* ]]> */</script>
        <link href="../../../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../../../SkinSupport/MadCapAll.js">
        </script>
        <script src="../../../../Resources/Code/prettify.js">
        </script>
        <script src="../../../../Resources/Code/lang-vb.js">
        </script>
        <script src="../../../../Resources/Code/jquery.min.js">
        </script>
        <script src="../../../../Resources/Code/ZeroClipboard.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../../index_CSH.html#basics/activation_concept/transparent_activation_framework/ta_enhanced_example/ta_enhancement_at_load_time.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../../../basics.htm">Basics Operations &amp; Concepts</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../../activation.htm">Activation</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../transparent_activation_framework.htm">Transparent Activation</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">TA Enhancement At Load Time</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>TA Enhancement At Loading Time</h1>
        <p><span class="MCTextPopup"><a href="javascript:void(0);" class="MCTextPopupSpot" onclick="FMCTextPopup( event, this ); return false;">TA<img style="border: none;margin-left: 5px;" src="../../../../SkinSupport/ExpandingClosed.gif" MadCap:altsrc="../../../../SkinSupport/ExpandingOpen.gif" class="MCExpandingIcon" onload="if ( typeof( FMCPreloadImage ) == 'function' ) { FMCPreloadImage( '../../../../SkinSupport/ExpandingOpen.gif' ); }" /></a><span class="MCTextPopupBody" style="display: none; ">Transparent Activation</span></span> Instrumentation at loading time is the most convenient as the classes do not have to be modified, only a separate runner class should be created to enable special instrumenting classloader to deal with the classes.</p>
        <p>The following configuration should be
used (note that reflector set-up is not necessary for the loading time instrumentation):</p>
        <pre class="prettyprint" xml:space="preserve">TAInstrumentationExample.java: configureTA
private static Configuration configureTA()  {
    Configuration configuration = Db4o.newConfiguration();
    configuration.add(new TransparentActivationSupport());
    // configure db4o to use instrumenting classloader
    // This is required for build time optimization!
    configuration.reflectWith(new JdkReflector(
        TAInstrumentationExample.class.getClassLoader()));

    return configuration;
  }</pre>
        <p>The <code>main</code> method should
provide the testing code:</p>
        <pre class="prettyprint" xml:space="preserve">TAInstrumentationExample.java: main
public static void main(String[] args)  {
    testActivation();
  }</pre>
        <pre class="prettyprint" xml:space="preserve">TAInstrumentationExample.java: storeSensorPanel
private static void storeSensorPanel()  {
    new File(DB4O_FILE_NAME).delete();
    ObjectContainer container = database(configureTA());
    if (container != null)  {
      try  {
        // create a linked list with length 10
        SensorPanel list = new SensorPanel().createList(10);
        container.store(list);
      } finally  {
        closeDatabase();
      }
    }
  }</pre>
        <pre class="prettyprint" xml:space="preserve">TAInstrumentationExample.java: testActivation
private static void testActivation()  {
    storeSensorPanel();
    Configuration configuration = configureTA();
    activateDiagnostics(configuration);

    ObjectContainer container = database(configuration);
    if (container != null)  {
      try  {
        Query query  = container.query();
        query.constrain(SensorPanel.class);
        query.descend("_sensor").constrain(new Integer(1));
        ObjectSet result = query.execute();
        listResult(result);
        if (result.size() &gt; 0)  {
          SensorPanel sensor = (SensorPanel) result.queryByExample(0);
          SensorPanel next = sensor._next;
          while (next != null)  {
            System.out.println(next);
            next = next._next;
          }
        }
      } finally  {
        closeDatabase();
      }
    }
  }</pre>
        <p>A separate class should be used to
run the instrumented example. This class creates a filter to point to the classes that should be instrumented, in this case ByNameClassFilter is used. You can see other filters in ClassFilter hierarchy. A special BloatClassEdit is created to instruct, which type of instrumentation will be used (InjectTransparentActivationEdit in our case). This configuration together with the path of the classes to be instrumented is passed to Db4oInstrumentationLauncher. </p>
        <pre class="prettyprint" xml:space="preserve">TAInstrumentationRunner.java
/**//* Copyright (C) 2007  Versant Inc.  http://www.db4o.com */

package com.db4odoc.taexamples.instrumented;

import java.io.File;
import java.net.URL;

import com.db4o.instrumentation.classfilter.ByNameClassFilter;
import com.db4o.instrumentation.core.BloatClassEdit;
import com.db4o.instrumentation.core.ClassFilter;
import com.db4o.instrumentation.main.Db4oInstrumentationLauncher;
import com.db4o.ta.instrumentation.InjectTransparentActivationEdit;


public class TAInstrumentationRunner  {

  public static void main(String[] args) throws Exception  {
    // list the classes that need to be instrumented
    ClassFilter filter = new ByNameClassFilter(new String[]  
{ SensorPanel.class.getName() });
    // inject TA awareness
    BloatClassEdit edits[] = new BloatClassEdit[] 
{new InjectTransparentActivationEdit(filter)};
    // get URL for the classloader
    URL[] urls =  { 
new File("e:\\sb4o\\trunk\\reference\\bin").toURI().toURL() };
    Db4oInstrumentationLauncher
.launch(edits, urls, TAInstrumentationExample.class.getName(), new String[] {});

  }
  // end main
  
}</pre>you can run the example by running Db4oInstrumentationLauncher, which will start TAInstrumentationExample in a correct configuration.  
     
    
<script type="text/javascript" src="../../../../SkinSupport/MadCapBodyEnd.js"></script></body>
</html>