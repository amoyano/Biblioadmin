<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Basics Operations &amp; Concepts|Update Concept|Transparent Persistence|Transparent Persistence Pitfalls" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Object Clone	</title>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').html();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
	prettyPrint();	
};
                /* ]]> */</script>
        <link href="../../../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../../../SkinSupport/MadCapAll.js">
        </script>
        <script src="../../../../Resources/Code/prettify.js">
        </script>
        <script src="../../../../Resources/Code/lang-vb.js">
        </script>
        <script src="../../../../Resources/Code/jquery.min.js">
        </script>
        <script src="../../../../Resources/Code/ZeroClipboard.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../../index_CSH.html#basics/update_concept/transparent_persistence/transparent_persistence/object_clone.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../../../basics.htm">Basics Operations &amp; Concepts</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../../update_concept.htm">Update Concept</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../transparent_persistence.htm">Transparent Persistence</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Object Clone</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Object Clone</h1>
        <p>Platform implementations of #clone is not compatible with <span class="MCTextPopup"><a href="javascript:void(0);" class="MCTextPopupSpot" onclick="FMCTextPopup( event, this ); return false;">TP<img style="border: none;margin-left: 5px;" src="../../../../SkinSupport/ExpandingClosed.gif" MadCap:altsrc="../../../../SkinSupport/ExpandingOpen.gif" class="MCExpandingIcon" onload="if ( typeof( FMCPreloadImage ) == 'function' ) { FMCPreloadImage( '../../../../SkinSupport/ExpandingOpen.gif' ); }" /></a><span class="MCTextPopupBody" style="display: none; ">Transparent Persistence</span></span>.
</p>
        <p>Both java and .NET object implementations provide
<code>#clone</code> method for default objects, which is enabled by
implementing <code>Cloneable/ICloneable</code> interface. This
implementation is a shallow clone, i.e. only the top-level object
fields are duplicated, all the referenced(children) objects are only
copied as references to the same object in the parent clone. But how it
affects Transparent Persistence?</p>
        <p>If you remember
<a href="../transparent_persistence_implementation.htm">Transparent Persistence Implementation</a>you must know that a special <code>Activator</code> field is used to
bind an object to the object container. Consequently, the default clone
will copy this <code>Activatable</code> field to the object's
duplicate, which will produce ambiguity as the object container won't
know which object should be activated for write.</p>
        <p>Let's look how it will affect db4o in practice. We will use a usual
<a href="car.htm">Car</a> class and make it cloneable. Use the following code to store a
car object and it's clone: </p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">TPCloneExample.java: storeCar
private static void storeCar() throws CloneNotSupportedException  {
    new File(DB4O_FILE_NAME).delete();
    ObjectContainer container = database(Db4o.newConfiguration());
    if (container != null)  {
      try  {
        // create a car
                Car car = new Car("BMW", new Pilot("Rubens Barrichello"));
                container.store(car);
                // clone
                Car car1 = (Car)car.clone();
                container.store(car1);
      } finally  {
        closeDatabase();
      }
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>So it works for the first store, but what if we will clone an object retrieved from the database?</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">TPCloneExample.java: testClone
private static void testClone() throws CloneNotSupportedException {
    storeCar();
    Configuration configuration = configureTP();

    ObjectContainer container = database(configuration);
    if (container != null)  {
      try  {
        ObjectSet result = container.queryByExample(new Car(null, null));
        listResult(result);
                Car car = null;
                Car car1 = null;
                if (result.size() &gt; 0)
                 {
                    car = (Car)result.queryByExample(0);
                    System.out.println("Retrieved car: " + car);
                    car1 = (Car)car.clone();
                    System.out.println("Storing cloned car: " + car1);
                    container.store(car1);
                }
      } finally  {
        closeDatabase();
      }
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>The code above throws an exception when the cloned object is being
bound to the object container. Luckily we can easily fix it by
overriding #clone method and setting activator to null: </p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">Car.java: Clone
public Object clone() throws CloneNotSupportedException  {
    Car test = (Car)super.clone();
    test._activator = null;
    return test;
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="tpclonejava.zip">Java </a>
            </MadCap:conditionalText>
        </p>
        <script type="text/javascript" src="../../../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>