<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Basics Operations &amp; Concepts|Querying|Native Queries" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Native Query Optimization</title>
        <script type="text/javascript">/* <![CDATA[ */
window.onload = function(){
	var pathToFlash = $('html').attr('MadCap:PathToHelpSystem') + 'Content/Resources/Code/ZeroClipboard.swf';
	ZeroClipboard.setMoviePath(pathToFlash);
			
	function bindToClipBord(element,content){
		var clip = new ZeroClipboard.Client();
		clip.setText(content);
		clip.glue(element);
	};
		
	if(location.protocol==='file:'){
		$('.copylink-marker').remove();
	} else{
			$('.copylink-marker').each(function(){
				var text = $(this).parent().parent().children('.prettyprint').html();
				$(this).hover(function(){
					bindToClipBord(this,text);
				},
				function(){});
			});	
	}		
	prettyPrint();	
};
                /* ]]> */</script>
        <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../../Resources/Code/prettify.js">
        </script>
        <script src="../../../Resources/Code/lang-vb.js">
        </script>
        <script src="../../../Resources/Code/jquery.min.js">
        </script>
        <script src="../../../Resources/Code/ZeroClipboard.js">
        </script>
        <script src="../../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../index_CSH.html#basics/querying/native_queries/native_query_optimization.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../../basics.htm">Basics Operations &amp; Concepts</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../querying.htm">Querying</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../native_queries.htm">Native Queries</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Native Query Optimization</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1><a name="kanchor9"></a>Native Query Optimization</h1>
        <p>Native queries will run out of the box in any environment. This optimization is turned on by default. Native queries will be converted to <a href="../soda_query.htm">SODA</a> where this is possible. This allows db4o to use indexes and optimized internal comparison algorithms. Otherwise native query may be executed by instantiating all objects, using <a href="../soda/soda_evaluations.htm">SODA evaluations</a>. Naturally performance will not be as good in this case.</p>
        <H2>Optimization Theory </H2>
        <p>For Native Query the <span class="PrimaryByteCode">bytecode</span> is analyzed to create an AST-like expression tree. Then the flow graph of the expression tree is analyzed and converted to a SODA query graph.</p>
        <p>For example:</p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve">ObjectSet&lt;Pilot&gt; result = container.query(new Predicate&lt;Pilot&gt;() {
    @Override
    public boolean match(Pilot pilot) {
        return pilot.getName().equals("John");
    }
});</pre>
            <div class="codesnippet-meta">NativeQueryExamples.java: Check for equality of the name
			<div class="codedownload"><a href="../../../CodeExamples/query/nq/Example-query-nq-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p>First the signature of the given <span MadCap:conditions="Primary.Java">class</span> is analyzed to find out the types. This is used to constrain the type in the SODA-query. Then the <span class="PrimaryByteCode">bytecode</span> of query is analyzed to find out was it does. When the operations a simple and easy to convert, it will be transformed to complete SODA query:</p>
        <div class="codesnippet" MadCap:conditions="Primary.Java">
            <pre class="prettyprint" xml:space="preserve">final Query query = container.query();
query.constrain(Pilot.class);
query.descend("name").constrain("John");

final ObjectSet&lt;Object&gt; result = query.execute();</pre>
            <div class="codesnippet-meta">SodaQueryExamples.java: A simple constrain on a field
			<div class="codedownload"><a href="../../../CodeExamples/query/soda/Example-query-soda-java.zip" class="codedownload" MadCap:conditions="Primary.Online">Download Code</a></div><div class="codedownload copylink-marker" MadCap:conditions="Primary.Online"><a href="#copy">Copy Code</a></div></div>
        </div>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <H2>Native Query Optimization</H2>
            <p>Native query optimization on Java requires db4onqopt.jar and bloat.jar to be present in the classpath. <a href="../../../dependency_overview.htm" target="" title="" alt="" class="MCXref" xrefformat="See &quot;{paratext}&quot;">See "Dependency Overview"</a>. Current optimization supports the following constructs well:</p>
            <UL>
                <LI value="1">Compile-time constants.</LI>
                <LI value="2">Simple member access.</LI>
                <LI value="3">Primitive comparisons.</LI>
                <LI value="4">The equals-method on primitive wrappers and strings.</LI>
                <LI value="5">The contains-,startsWith- and endsWith-method for strings.</LI>
                <LI value="6">Arithmetic expressions.</LI>
                <LI value="7">Boolean expressions.</LI>
                <LI value="8">Static field access.</LI>
                <LI value="9">Array access for static/predicate fields.</LI>
                <LI value="10">Arbitrary method calls on static/predicate fields (without candidate based parameters).</LI>
                <LI value="11">Candidate methods composed of the above.</LI>
                <LI value="12">Chained combinations of the above.</LI>
            </UL>
            <p>Note that the current implementation doesn't support polymorphism and multiline methods yet.</p>
            <p>db4o for Java supplies three different possibilities to run optimized native queries. By default native queries are optimized at runtime when the query runs the first time. This is the most convenient way because it doesn't need any preparations.</p>
            <p>On certain environments (embedded runtimes, older java releases) this runtime optimization doesn't work. In such cases there are two alternatives. The <a href="native_query_optimization/nq_build_time_optimisation.htm">compile time optimization</a> and the class load time optimization. <a href="../../../advanced_topics/enhancement_tools.htm" target="" title="" alt="" class="MCXref" xrefformat="See &quot;{paratext}&quot;">See "Enhancement Tools"</a></p>
        </p>
        <p>For more information on native queries optimization see <a href="native_query_optimization/monitoring_optimization.htm">Monitoring Optimization</a>.</p>
        <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>